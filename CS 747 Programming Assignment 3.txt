CS 747: Programming Assignment 3
As a part of this assignment, you will implement the Windy Gridworld task given as Example 6.5 by Sutton and Barto (2018). You will program some agent-environment interactions, record your results, and present your interpretations.

Unlike the previous assignments, there is no autograder script for this assignment. You can design your own code structure, internal data formats, etc. But your code still needs to be able to run on the docker; you must describe its usage in a README file.


Tasks
[x] Implement Windy Gridworld as an episodic MDP. 
[x] The core of your code will have to be a function (or functions) to obtain next state and reward for a given state and action. You can use your own function names and conventions.
[ ] Implement a Sarsa(0) agent as described in the example, and obtain a baseline plot similar to the one accompanying the example (episodes against time steps). You can set learning and exploration rates as you see fit (just be sure to 	describe them in your report).
[ ] Get another plot when King's moves are permitted (that is, 8 actions in total), as described in Exercise 6.9.
[ ] Add stochasticity to the task as described in Exercise 6.10, and again plot the resulting performance of the Sarsa(0) agent. Make sure you note down your convention for modeling corner cases.
[ ] Implement 2 with Expected Sarsa and Q-learning agents in place of the Sarsa agent, again with full bootstrapping. 
[ ] Create a combined plot comparing Sarsa, Expected Sarsa, and Q-learning. Use the same learning and exploration rates for all three methods. You only need to create the baseline plot as a part of this task (no King's moves, no 	stochasticity).
[ ] In all your experiments, generate at least ten independent runs by varying the random seed. Plot the average statistic in the graphs.


Submission
[ ] Create a directory called submission and place the following material in it.
[ ] Your code for implementing the task and its variants;
[ ] Code for your Sarsa, Expected Sarsa, and Q-learning agents;
[ ] A script to run your simulations and gather data;
[ ] Plots of your agent's performance;
[ ] A README file describing how to run your code and obtain the plots; and
[ ] A report presenting your observations from these experiments (as a pdf file named report.pdf). Place the plots in the report and provide accompanying commentary, rather than keeping the plots and text separate.
